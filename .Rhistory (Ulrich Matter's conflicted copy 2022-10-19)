# Script that checks which images are actually embedded in any file,
# given one or several folders of rmd files and a folder of images.
#
# Images that are not found to be embedded in any file, are removed from
# the image folder (either deleted or moved to a given folder)
remove_images <-
function(img, files, delete=FALSE, img_archive=NULL) {
require(stringr)
if (!delete & is.null(img_archive)){
stop("Path to image archive is missing!\n")
}
# get a list of all the images
images <- list.files(path = img)
images_paths <- list.files(path = img,
full.names = TRUE)
# read all the files as strings
files_found <- unlist(lapply(files,
list.files,
full.names = TRUE, recursive = TRUE,
pattern= "\\.Rmd"))
docs <- lapply(files_found, readLines)
docs <- lapply(docs, paste, collapse = " ")
# find images in files
matches <- unique(unlist(lapply(docs, str_which, pattern = images)))
images_not_used <- images_paths[matches*-1]
if (!delete) {
# move the unused images
copied <- file.copy(from = images_not_used,
to = img_archive, overwrite = TRUE)
if (all(copied)){
lapply(images_not_used, unlink)
}
} else {
lapply(images_not_used, unlink)
}
}
remove_images(img = "img", files= "materials/", img_archive = "archive")
remove_images(img = "img", files= "materials/", img_archive = "archive")
remove_images(img = "img", files= "materials/", img_archive = "archive")
remove_images(img = "img", files= "materials/", img_archive = "archive")
remove_images(img = "img", files= "materials/", img_archive = "archive")
library(tidyverse)
?pivot_longer
# Simplest case where column names are character data
relig_income
relig_income %>%
pivot_longer(!religion, names_to = "income", values_to = "count")
test <- data.frame(name=c("Andy", "Claire"), income.2020=c(50000,60000), income.2021=c(54000, 59000))
test
test <- data.frame(name=c("Andy", "Claire"), inc.2020=c(50000,60000), inc.2021=c(54000, 59000))
pivot_longer(test)
pivot_longer(test, 2:3)
pivot_longer(test, !name)
pivot_longer(test, !name, names_to = "income")
pivot_longer(test, !name, names_to = "year")
pivot_longer(test, !name, names_to = "year", names_prefix = "inc.")
pivot_longer(test, !name, names_to = "year", names_prefix = "inc.", values_to = "income")
test <- data.frame(name=c("Andy", "Claire"), income.2020=c(50000,60000), income.2021=c(54000, 59000))
pivot_longer(test, !name, names_to = "year", names_prefix = "inc.", values_to = "income")
pivot_longer(test, !name, names_to = "year", names_prefix = "income.", values_to = "income")
test <- data.frame(name=c("Andy", "Claire"), income.2020=c(50000,60000), income.2021=c(54000, 59000))
test
########################################################
# Data Handling Lecture 5: Read a Webpage into R
#
# See Wikipedia's page on the Swiss Economy
# https://en.wikipedia.org/wiki/Economy_of_Switzerland
########################################################
# SET UP ---------
# packages
library(rvest) # depends on httr and xml2
# fix variables
URL <- "https://en.wikipedia.org/wiki/Economy_of_Switzerland"
# READ WEBPAGE AS TEXT DOCUMENT -------------------
# (naive approach to import a website into R...)
swiss_econ <- readLines("https://en.wikipedia.org/wiki/Economy_of_Switzerland")
head(swiss_econ)
## Navigate the raw HTML
line_number <- grep('US Dollar Exchange', swiss_econ)
line_number
